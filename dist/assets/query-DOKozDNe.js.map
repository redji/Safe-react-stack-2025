{"version":3,"file":"query-DOKozDNe.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.js","../../node_modules/react/jsx-runtime.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nimport { systemSetTimeoutZero } from \"./timeoutManager.js\";\nvar defaultScheduler = systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        if (key === \"promise\") {\n          this.trackProp(\"data\");\n          if (!this.options.experimental_prefetchInRender && this.#currentThenable.status === \"pending\") {\n            this.#currentThenable.reject(\n              new Error(\n                \"experimental_prefetchInRender feature flag is not enabled\"\n              )\n            );\n          }\n        }\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #client;\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.#client = config.client;\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    const mutationFnContext = {\n      client: this.#client,\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables, mutationFnContext);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this,\n          mutationFnContext\n        );\n        const context = await this.options.onMutate?.(\n          variables,\n          mutationFnContext\n        );\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSettled?.(\n        data,\n        null,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      client,\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const MIN_SUSPENSE_TIME_MS = 1e3;\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS\n      );\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const client = useQueryClient(queryClient);\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","jsxRuntimeModule","require$$0","Subscribable","listener","defaultTimeoutProvider","callback","delay","timeoutId","intervalId","TimeoutManager","_a","__privateAdd","_provider","_providerCalled","provider","__privateSet","__privateGet","timeoutManager","systemSetTimeoutZero","isServer","noop","functionalUpdate","updater","input","isValidTimeout","value","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","options","_","val","isPlainObject","result","a","b","hasOwn","replaceEqualDeep","array","isPlainArray","aSize","bItems","bSize","copy","equalItems","i","aItem","bItem","v","shallowEqualObjects","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","shouldThrowError","throwOnError","params","FocusManager","_focused","_cleanup","_setup","onFocus","setup","focused","isFocused","focusManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultScheduler","createNotifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","flush","originalQueue","args","fn","notifyManager","OnlineManager","_online","onOnline","onlineListener","offlineListener","online","onlineManager","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","createRetryer","isRetryCancelled","continueFn","isResolved","cancel","cancelOptions","error","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","retry","retryDelay","shouldRetry","Removable","_gcTimeout","newGcTime","Query","_Query_instances","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","getDefaultState","defaultState","newData","__privateMethod","dispatch_fn","state","setStateOptions","promise","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","queryFnContext2","context","context2","action","reducer","fetchState","newState","hasData","initialDataUpdatedAt","QueryObserver","client","_QueryObserver_instances","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","shouldFetchOnMount","executeFetch_fn","updateTimers_fn","shouldFetchOn","clearStaleTimeout_fn","clearRefetchInterval_fn","prevOptions","prevQuery","updateQuery_fn","mounted","shouldFetchOptionally","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","updateRefetchInterval_fn","shouldAssignObserverCurrentProperties","onPropTracked","target","defaultedOptions","prevResult","prevResultState","prevResultOptions","queryInitialState","isPlaceholderData","fetchOnMount","fetchOptionally","errorUpdatedAt","skipSelect","placeholderData","selectError","isFetching","isPending","isError","isLoading","nextResult","isStale","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","notify_fn","nextInterval","notifyOptions","shouldLoadOnMount","field","optimisticResult","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","Mutation","_Mutation_instances","_observers","_mutationCache","variables","onContinue","mutationFnContext","restored","isPaused","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","scope","scopeFor","scopedMutations","index","firstPendingMutation","m","defaultedFilters","event","pausedMutations","QueryCache","_queries","queryHash","queryInMap","queries","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","_b","cachedData","queryCache","defaultedCancelOptions","promises","defaults","queryDefault","QueryClientContext","React.createContext","useQueryClient","queryClient","React.useContext","QueryClientProvider","children","React.useEffect","jsx","IsRestoringContext","useIsRestoring","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","getHasError","suspense","ensureSuspenseTimers","clamp","originalStaleTime","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","isNewCacheEntry","React.useState","shouldSubscribe","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","useQuery"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}